<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

<!--    <bean id="userDao" class="com.qf.cl.dao.impl.UserDaoImpl"/>-->

<!--    <bean id="userService" class="com.qf.cl.service.impl.UserServiceImpl">-->
<!--        <property name="userDao" ref="userDao"/>-->
<!--    </bean>-->

    <context:property-placeholder location="jdbc.properties"/>


    <!--Druid连接池-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
     </bean>

    <!--sqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
<!--        <property name="mapperLocations">-->
<!--            <list>-->
<!--                <value>classpath:com/qf/cl/dao/*.xml</value>-->
<!--            </list>-->
<!--        </property>-->
        <property name="typeAliasesPackage" value="com.qf.cl.entity"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.qf.cl.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!-- aop自动扫描   -->
    <aop:aspectj-autoproxy/>

    <!-- 自动扫描   -->
    <context:component-scan base-package="com.qf.cl"/>


    <bean id="userService" class="com.qf.cl.service.impl.UserServiceImpl" autowire="byType"/>

    <bean id="myFactory" class="com.qf.cl.factory.MyFactory"/>
    <bean id="student" class="com.qf.cl.entity.Student">
        <constructor-arg name="id" value="1"/>
        <constructor-arg name="name" value="zhangfei"/>
        <constructor-arg name="sex" value="M"/>
        <constructor-arg name="age" value="12"/>
    </bean>

    <!-- 1. 引入一个事务管理器，其中依赖DataSource,借以获得连接，进而控制事务逻辑 -->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"></property>
    </bean>

    <tx:advice id="txManager" transaction-manager="tx">
        <tx:attributes>
            <!--<tx:method name="insertUser" rollback-for="Exception" isolation="DEFAULT"
                      propagation="REQUIRED" read-only="false"/>-->
            <!-- 以User结尾的方法，切入此方法时，采用对应事务实行-->
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="add*" rollback-for="Exception" propagation="REQUIRED" />
            <tx:method name="insert*" rollback-for="Exception" propagation="REQUIRED" />
            <!-- 以query开头的方法，切入此方法时，采用对应事务实行 -->
            <tx:method name="query*" propagation="SUPPORTS"/>
            <tx:method name="select*" propagation="SUPPORTS"/>
            <!-- 剩余所有方法 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut expression="execution(* com.qf.cl.service..*.*(..))" id="pc"/>
        <!-- 组织切面 -->
        <aop:advisor advice-ref="txManager" pointcut-ref="pc"/>
    </aop:config>

    <tx:annotation-driven transaction-manager="tx"/>
</beans>